SELECT * FROM customer_table

INSERT INTO customer_table
VALUES (1, 'bee','cee',32,'bc@xyz.com');


/*Single row (with column names specified)*/
INSERT INTO
customer_table ( cust_id , first_name , age, email_id) 
VALUES (2, 'dee ', 22 , 'd@xyz.com');


/*Multiple rows*/
INSERT INTO
customer_table
VALUES (3, 'ee', 'ef', 35, 'ef@xyz.com'),
(4, 'gee ', 'eh', 42 , 'gh@xyz.com'),
(5, 'eye', 'jay', 62 , 'ij@xyz.com');

/*copy command*/
COPY customer_table from 'C:\Program Files\PostgreSQL\12\data\data copy\copy.csv'
delimiter ',' csv header;


/*The SELECT statement is used to fetch the data from a database table*/
/*Select all columns*/
SELECT * FROM customer_table;

/*Select one column*/
SELECT first_name FROM customer_table;

/*Select multiple columns*/
SELECT first_name , last_name FROM customer_table;


/*The DISTINCT keyword is used in conjunction with the SELECT statement to eliminate all the duplicate records and
fetching only unique records.*/
/*Select all columns*/
SELECT DISTINCT * FROM customer_table;

/*Select one column*/
SELECT DISTINCT first_name FROM customer_table;

/* Select multiple columns */
SELECT DISTINCT first_name , age FROM customer_table;


/*The SQL WHERE clause is used to specify a condition while fetching the
data from a single table or by joining with multiple tables. If the given
condition is satisfied, then only it returns a specific value from the table.*/

/*Equals to condition*/
SELECT first_name FROM customer_table WHERE age = 25;

/*Less than/ Greater than condition*/
SELECT first_name , age FROM customer_table WHERE age>25;

/* Matching text condition */
SELECT * FROM customer_table WHERE first_name = 'bee';




/*The SQL AND & OR operators are used to combine multiple conditions 
to narrow data in an SQL statement. These two operators are called as
the conjunctive operators.*/

SELECT first_name,last_name,age FROM customer_table WHERE age>20
AND age<30;

SELECT first_name,last_name,age FROM customer_table WHERE age<20
OR age>30 OR first_name = 'john';

SELECT first_name,last_name,age FROM customer_table WHERE NOT age=25;

SELECT first_name,last_name , age FROM customer_table WHERE NOT age=25
AND NOT first_name = 'Jay';

SELECT * FROM customer_table WHERE NOT age=25;

SELECT * FROM customer_table WHERE NOT age=25 AND NOT first_name = 'Jay';




/*The SQL UPDATE Query is used to modify the existing records in a table.*/

SELECT * FROM customer_table

/*Single row (with column names specified)*/
UPDATE Customer_table SET Age = 17, Last_name = 'Pe' WHERE Cust_id = 2;

/*Multiple rows*/
UPDATE Customer_table SET email_id = 'gee@xyz.com' WHERE First_name = 'Gee' 
or First_name = 'gee';



/*The DELETE Query is used to delete the existing records from a table.*/

/*Single row*/
DELETE FROM Customer_table WHERE Cust_id = 6;

/*Multiple rows*/
DELETE FROM Customer_table WHERE age>25;

/*All rows*/
DELETE FROM Customer_table;




/*The basic syntax of an ALTER TABLE command to add/drop a
Column in an existing table is as follows.*/

SELECT * FROM customer_table

/*adding new column*/
ALTER TABLE Customer_table ADD test VARCHAR (255);

/*delete a column*/
ALTER TABLE Customer_table DROP test;
ALTER TABLE Customer_table DROP COLUMN test;

/*change the data type of column*/
ALTER TABLE Customer_table ALTER COLUMN age TYPE varchar(255);

/*rename a column name*/
ALTER TABLE Customer_table RENAME COLUMN "email_id" TO "customer email_id";



/*The basic syntax of an ALTER TABLE command to add/drop a
Constraint on a existing table is as follows.*/

SELECT * FROM customer_table

ALTER TABLE Customer_table ALTER COLUMN cust_id SET NOT null;

ALTER TABLE Customer_table ALTER COLUMN cust_id DROP NOT null;

ALTER TABLE Customer_table ADD CONSTRAINT cust_id CHECK (cust_id>0);

ALTER TABLE Customer_table ADD PRIMARY KEY (cust_id);

