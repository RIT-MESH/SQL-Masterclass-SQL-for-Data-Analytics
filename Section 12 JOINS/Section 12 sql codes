/* INNER JOIN compares each row of table1 with each row of table2 
to find all pairs of rows which satisfy the join predicate. 
When satisfied, column values for each matched pair of rows 
of A and B are combined into a result row. */

/*Creating sales table of year 2015*/
Create table sales_2015 as select * from sales where ship_date between '2015-01-01' and '2015-12-31';
select count(*) from sales_2015; --2131
select count(distinct customer_id) from sales_2015;--578

/* Customers with age between 20 and 60 */
create table customer_20_60 as select * from customer where age between 20 and 60;
select count (*) from customer_20_60;--597


SELECT
	a.order_line,
	a.product_id,
	a.customer_id,
	a.sales,
	b.customer_name,
	b.age
FROM sales_2015 AS a INNER JOIN customer_20_60 AS b ON 
a.customer_id = b.customer_id ORDER BY customer_id;

/* The LEFT JOIN returns all rows from the left table, even if there
are no matches in the right table. */

SELECT
a.order_line,
a.product_id,
a.customer_id,
a.sales,
b.customer_name,
b.age
FROM sales_2015 AS a LEFT JOIN customer_20_60 AS b 
ON a.customer_id = b.customer_id ORDER BY customer_id;

/* The RIGHT JOIN returns all rows from the right table, even if there
are no matches in the left table. */

SELECT
a.order_line,
a.product_id,
a.customer_id,
a.sales,
b.customer_name,
b.age
FROM sales_2015 AS a RIGHT JOIN customer_20_60 AS b ON
a.customer_id = b.customer_id ORDER BY customer_id;


/* The FULL JOIN combines the results of both left and right
outer joins */

SELECT
a.order_line,
a.product_id,
a.customer_id,
a.sales,
b.customer_name,
b.age,
b.customer_id
FROM sales_2015 AS a FULL JOIN customer_20_60 AS b ON
a.customer_id = b.customer_id ORDER BY a.customer_id , b.customer_id;


/* cross join */
create table month_values (mm integer);
create table year_values (yyyy integer);

insert into month_values values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12);
insert into year_values values ,(2011),(2012),(2013),(2014),(2015),(2016),(2017),(2018),(2019);






